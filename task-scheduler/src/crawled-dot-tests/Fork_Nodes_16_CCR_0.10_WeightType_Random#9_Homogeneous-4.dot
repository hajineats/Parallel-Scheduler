digraph "Fork_Nodes_16_CCR_0.10_WeightType_Random#9" {
	graph ["Duplicate states"=0,
		GraphType=Fork,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=16,
		"Pruned using list schedule length"=132640,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-4",
		"Time to schedule (ms)"=514,
		"Total idle time"=229,
		"Total schedule length"=321,
		"Total sequential time"=1050,
		"Total states created"=276304
	];
	0	["Finish time"=73,
		Processor=0,
		"Start time"=0,
		Weight=73];
	13	["Finish time"=223,
		Processor=1,
		"Start time"=113,
		Weight=110];
	0 -> 13	[Weight=6];
	1	["Finish time"=234,
		Processor=2,
		"Start time"=136,
		Weight=98];
	0 -> 1	[Weight=10];
	7	["Finish time"=321,
		Processor=1,
		"Start time"=223,
		Weight=98];
	0 -> 7	[Weight=7];
	2	["Finish time"=297,
		Processor=3,
		"Start time"=212,
		Weight=85];
	0 -> 2	[Weight=8];
	3	["Finish time"=212,
		Processor=3,
		"Start time"=127,
		Weight=85];
	0 -> 3	[Weight=6];
	14	["Finish time"=319,
		Processor=2,
		"Start time"=234,
		Weight=85];
	0 -> 14	[Weight=10];
	4	["Finish time"=146,
		Processor=0,
		"Start time"=73,
		Weight=73];
	0 -> 4	[Weight=7];
	5	["Finish time"=136,
		Processor=2,
		"Start time"=75,
		Weight=61];
	0 -> 5	[Weight=2];
	9	["Finish time"=318,
		Processor=0,
		"Start time"=269,
		Weight=49];
	0 -> 9	[Weight=10];
	10	["Finish time"=269,
		Processor=0,
		"Start time"=220,
		Weight=49];
	0 -> 10	[Weight=8];
	15	["Finish time"=127,
		Processor=3,
		"Start time"=78,
		Weight=49];
	0 -> 15	[Weight=5];
	6	["Finish time"=183,
		Processor=0,
		"Start time"=146,
		Weight=37];
	0 -> 6	[Weight=7];
	11	["Finish time"=113,
		Processor=1,
		"Start time"=76,
		Weight=37];
	0 -> 11	[Weight=3];
	12	["Finish time"=220,
		Processor=0,
		"Start time"=183,
		Weight=37];
	0 -> 12	[Weight=7];
	8	["Finish time"=321,
		Processor=3,
		"Start time"=297,
		Weight=24];
	0 -> 8	[Weight=9];
}
