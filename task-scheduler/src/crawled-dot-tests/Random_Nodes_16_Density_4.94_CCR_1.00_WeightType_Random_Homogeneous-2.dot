digraph "Random_Nodes_16_Density_4.94_CCR_1.00_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=16,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-2",
		"Time to schedule (ms)"=95,
		"Total idle time"=200,
		"Total schedule length"=395,
		"Total sequential time"=465,
		"Total states created"=2
	];
	15	["Finish time"=40,
		Processor=0,
		"Start time"=0,
		Weight=40];
	14	["Finish time"=50,
		Processor=0,
		"Start time"=40,
		Weight=10];
	15 -> 14	[Weight=7];
	13	["Finish time"=90,
		Processor=0,
		"Start time"=50,
		Weight=40];
	15 -> 13	[Weight=10];
	12	["Finish time"=115,
		Processor=0,
		"Start time"=90,
		Weight=25];
	15 -> 12	[Weight=3];
	11	["Finish time"=165,
		Processor=0,
		"Start time"=115,
		Weight=50];
	15 -> 11	[Weight=3];
	7	["Finish time"=235,
		Processor=0,
		"Start time"=190,
		Weight=45];
	15 -> 7	[Weight=6];
	8	["Finish time"=130,
		Processor=1,
		"Start time"=120,
		Weight=10];
	15 -> 8	[Weight=10];
	10	["Finish time"=206,
		Processor=1,
		"Start time"=171,
		Weight=35];
	15 -> 10	[Weight=2];
	6	["Finish time"=270,
		Processor=1,
		"Start time"=245,
		Weight=25];
	15 -> 6	[Weight=7];
	3	["Finish time"=310,
		Processor=0,
		"Start time"=290,
		Weight=20];
	15 -> 3	[Weight=2];
	2	["Finish time"=325,
		Processor=0,
		"Start time"=310,
		Weight=15];
	15 -> 2	[Weight=10];
	1	["Finish time"=350,
		Processor=0,
		"Start time"=325,
		Weight=25];
	15 -> 1	[Weight=10];
	0	["Finish time"=395,
		Processor=0,
		"Start time"=350,
		Weight=45];
	15 -> 0	[Weight=7];
	14 -> 13	[Weight=9];
	14 -> 12	[Weight=8];
	14 -> 7	[Weight=2];
	5	["Finish time"=275,
		Processor=0,
		"Start time"=235,
		Weight=40];
	14 -> 5	[Weight=6];
	14 -> 10	[Weight=9];
	4	["Finish time"=290,
		Processor=0,
		"Start time"=275,
		Weight=15];
	14 -> 4	[Weight=3];
	14 -> 3	[Weight=2];
	14 -> 2	[Weight=4];
	14 -> 1	[Weight=9];
	13 -> 12	[Weight=5];
	13 -> 11	[Weight=4];
	13 -> 7	[Weight=5];
	13 -> 8	[Weight=7];
	13 -> 5	[Weight=4];
	13 -> 6	[Weight=2];
	13 -> 4	[Weight=3];
	13 -> 3	[Weight=10];
	13 -> 2	[Weight=9];
	13 -> 1	[Weight=2];
	13 -> 0	[Weight=3];
	12 -> 11	[Weight=9];
	9	["Finish time"=190,
		Processor=0,
		"Start time"=165,
		Weight=25];
	12 -> 9	[Weight=6];
	12 -> 7	[Weight=6];
	12 -> 8	[Weight=5];
	12 -> 5	[Weight=7];
	12 -> 6	[Weight=8];
	12 -> 3	[Weight=7];
	11 -> 9	[Weight=7];
	11 -> 7	[Weight=7];
	11 -> 5	[Weight=5];
	11 -> 10	[Weight=6];
	11 -> 6	[Weight=9];
	11 -> 1	[Weight=8];
	11 -> 0	[Weight=2];
	9 -> 7	[Weight=9];
	9 -> 5	[Weight=3];
	9 -> 4	[Weight=3];
	9 -> 2	[Weight=3];
	9 -> 1	[Weight=6];
	7 -> 5	[Weight=6];
	7 -> 6	[Weight=10];
	7 -> 4	[Weight=2];
	7 -> 3	[Weight=3];
	7 -> 0	[Weight=6];
	8 -> 5	[Weight=6];
	8 -> 6	[Weight=5];
	8 -> 4	[Weight=5];
	8 -> 3	[Weight=8];
	8 -> 2	[Weight=2];
	8 -> 1	[Weight=5];
	5 -> 4	[Weight=9];
	5 -> 3	[Weight=9];
	5 -> 2	[Weight=5];
	5 -> 1	[Weight=5];
	10 -> 4	[Weight=3];
	10 -> 3	[Weight=4];
	10 -> 2	[Weight=6];
	10 -> 0	[Weight=10];
	6 -> 3	[Weight=8];
	6 -> 2	[Weight=2];
	6 -> 1	[Weight=10];
	6 -> 0	[Weight=6];
	4 -> 3	[Weight=10];
	4 -> 2	[Weight=5];
	3 -> 2	[Weight=5];
	2 -> 1	[Weight=5];
	1 -> 0	[Weight=5];
}
