digraph "Fork_Nodes_16_CCR_0.10_WeightType_Random#5" {
	graph ["Duplicate states"=0,
		GraphType=Fork,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=16,
		"Pruned using list schedule length"=3326,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-2",
		"Time to schedule (ms)"=298,
		"Total idle time"=122,
		"Total schedule length"=552,
		"Total sequential time"=972,
		"Total states created"=12282
	];
	0	["Finish time"=120,
		Processor=0,
		"Start time"=0,
		Weight=120];
	13	["Finish time"=408,
		Processor=0,
		"Start time"=288,
		Weight=120];
	0 -> 13	[Weight=7];
	11	["Finish time"=278,
		Processor=1,
		"Start time"=194,
		Weight=84];
	0 -> 11	[Weight=5];
	10	["Finish time"=194,
		Processor=1,
		"Start time"=122,
		Weight=72];
	0 -> 10	[Weight=2];
	12	["Finish time"=516,
		Processor=0,
		"Start time"=444,
		Weight=72];
	0 -> 12	[Weight=10];
	14	["Finish time"=216,
		Processor=0,
		"Start time"=144,
		Weight=72];
	0 -> 14	[Weight=3];
	2	["Finish time"=386,
		Processor=1,
		"Start time"=326,
		Weight=60];
	0 -> 2	[Weight=8];
	7	["Finish time"=494,
		Processor=1,
		"Start time"=434,
		Weight=60];
	0 -> 7	[Weight=9];
	1	["Finish time"=434,
		Processor=1,
		"Start time"=386,
		Weight=48];
	0 -> 1	[Weight=8];
	5	["Finish time"=542,
		Processor=1,
		"Start time"=494,
		Weight=48];
	0 -> 5	[Weight=10];
	8	["Finish time"=326,
		Processor=1,
		"Start time"=278,
		Weight=48];
	0 -> 8	[Weight=7];
	9	["Finish time"=288,
		Processor=0,
		"Start time"=240,
		Weight=48];
	0 -> 9	[Weight=5];
	4	["Finish time"=552,
		Processor=0,
		"Start time"=516,
		Weight=36];
	0 -> 4	[Weight=10];
	15	["Finish time"=444,
		Processor=0,
		"Start time"=408,
		Weight=36];
	0 -> 15	[Weight=7];
	3	["Finish time"=144,
		Processor=0,
		"Start time"=120,
		Weight=24];
	0 -> 3	[Weight=2];
	6	["Finish time"=240,
		Processor=0,
		"Start time"=216,
		Weight=24];
	0 -> 6	[Weight=4];
}
