digraph "Random_Nodes_21_Density_4.90_CCR_0.10_WeightType_Random#1" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=21,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-4",
		"Time to schedule (ms)"=101,
		"Total idle time"=3979,
		"Total schedule length"=3442,
		"Total sequential time"=6131,
		"Total states created"=2
	];
	0	["Finish time"=472,
		Processor=0,
		"Start time"=0,
		Weight=472];
	2	["Finish time"=896,
		Processor=0,
		"Start time"=472,
		Weight=424];
	0 -> 2	[Weight=7];
	1	["Finish time"=576,
		Processor=1,
		"Start time"=482,
		Weight=94];
	0 -> 1	[Weight=10];
	5	["Finish time"=1556,
		Processor=0,
		"Start time"=1179,
		Weight=377];
	0 -> 5	[Weight=7];
	9	["Finish time"=1418,
		Processor=2,
		"Start time"=1182,
		Weight=236];
	0 -> 9	[Weight=2];
	7	["Finish time"=1466,
		Processor=1,
		"Start time"=1372,
		Weight=94];
	0 -> 7	[Weight=4];
	12	["Finish time"=2405,
		Processor=0,
		"Start time"=1933,
		Weight=472];
	0 -> 12	[Weight=6];
	13	["Finish time"=2782,
		Processor=0,
		"Start time"=2405,
		Weight=377];
	0 -> 13	[Weight=10];
	19	["Finish time"=3442,
		Processor=0,
		"Start time"=3206,
		Weight=236];
	0 -> 19	[Weight=8];
	18	["Finish time"=3405,
		Processor=2,
		"Start time"=3216,
		Weight=189];
	0 -> 18	[Weight=8];
	4	["Finish time"=1179,
		Processor=0,
		"Start time"=896,
		Weight=283];
	2 -> 4	[Weight=8];
	6	["Finish time"=1372,
		Processor=1,
		"Start time"=1183,
		Weight=189];
	2 -> 6	[Weight=9];
	8	["Finish time"=1650,
		Processor=0,
		"Start time"=1556,
		Weight=94];
	2 -> 8	[Weight=7];
	10	["Finish time"=1933,
		Processor=0,
		"Start time"=1650,
		Weight=283];
	2 -> 10	[Weight=4];
	15	["Finish time"=2265,
		Processor=2,
		"Start time"=1935,
		Weight=330];
	2 -> 15	[Weight=4];
	17	["Finish time"=3206,
		Processor=0,
		"Start time"=2782,
		Weight=424];
	2 -> 17	[Weight=7];
	14	["Finish time"=3263,
		Processor=1,
		"Start time"=2791,
		Weight=472];
	2 -> 14	[Weight=5];
	20	["Finish time"=2642,
		Processor=2,
		"Start time"=2265,
		Weight=377];
	2 -> 20	[Weight=8];
	2 -> 18	[Weight=6];
	4 -> 5	[Weight=4];
	4 -> 6	[Weight=4];
	4 -> 9	[Weight=3];
	4 -> 10	[Weight=9];
	4 -> 13	[Weight=8];
	16	["Finish time"=2222,
		Processor=1,
		"Start time"=1939,
		Weight=283];
	4 -> 16	[Weight=3];
	4 -> 15	[Weight=6];
	4 -> 14	[Weight=6];
	4 -> 20	[Weight=8];
	4 -> 19	[Weight=4];
	3	["Finish time"=236,
		Processor=1,
		"Start time"=0,
		Weight=236];
	3 -> 5	[Weight=7];
	3 -> 6	[Weight=5];
	3 -> 8	[Weight=5];
	3 -> 13	[Weight=10];
	3 -> 16	[Weight=7];
	3 -> 15	[Weight=10];
	3 -> 17	[Weight=5];
	3 -> 14	[Weight=2];
	1 -> 5	[Weight=9];
	1 -> 6	[Weight=9];
	1 -> 7	[Weight=4];
	1 -> 12	[Weight=10];
	1 -> 16	[Weight=9];
	1 -> 17	[Weight=3];
	1 -> 20	[Weight=3];
	1 -> 19	[Weight=10];
	5 -> 8	[Weight=4];
	11	["Finish time"=1842,
		Processor=1,
		"Start time"=1653,
		Weight=189];
	5 -> 11	[Weight=10];
	5 -> 13	[Weight=6];
	5 -> 15	[Weight=2];
	5 -> 17	[Weight=10];
	5 -> 20	[Weight=7];
	5 -> 18	[Weight=9];
	6 -> 7	[Weight=2];
	6 -> 8	[Weight=10];
	6 -> 10	[Weight=9];
	6 -> 12	[Weight=3];
	6 -> 15	[Weight=8];
	6 -> 18	[Weight=3];
	9 -> 10	[Weight=5];
	9 -> 13	[Weight=5];
	9 -> 16	[Weight=9];
	9 -> 15	[Weight=3];
	9 -> 14	[Weight=7];
	9 -> 19	[Weight=4];
	7 -> 8	[Weight=3];
	7 -> 10	[Weight=6];
	7 -> 12	[Weight=8];
	7 -> 17	[Weight=8];
	7 -> 20	[Weight=9];
	7 -> 18	[Weight=6];
	8 -> 10	[Weight=10];
	8 -> 11	[Weight=3];
	8 -> 12	[Weight=10];
	8 -> 15	[Weight=10];
	8 -> 17	[Weight=4];
	8 -> 14	[Weight=2];
	8 -> 19	[Weight=2];
	10 -> 12	[Weight=2];
	10 -> 13	[Weight=4];
	10 -> 16	[Weight=6];
	10 -> 15	[Weight=2];
	10 -> 17	[Weight=2];
	10 -> 20	[Weight=7];
	11 -> 12	[Weight=7];
	11 -> 16	[Weight=6];
	11 -> 17	[Weight=3];
	11 -> 14	[Weight=2];
	11 -> 19	[Weight=4];
	11 -> 18	[Weight=10];
	12 -> 13	[Weight=7];
	12 -> 17	[Weight=4];
	12 -> 14	[Weight=5];
	12 -> 19	[Weight=3];
	13 -> 17	[Weight=4];
	13 -> 14	[Weight=9];
	13 -> 18	[Weight=4];
	16 -> 17	[Weight=8];
	16 -> 20	[Weight=3];
	16 -> 19	[Weight=2];
	15 -> 20	[Weight=3];
	15 -> 19	[Weight=4];
	15 -> 18	[Weight=3];
	17 -> 19	[Weight=9];
	17 -> 18	[Weight=10];
}
