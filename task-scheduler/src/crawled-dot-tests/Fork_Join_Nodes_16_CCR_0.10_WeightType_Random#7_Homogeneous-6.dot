digraph "Fork_Join_Nodes_16_CCR_0.10_WeightType_Random#7" {
	graph ["Duplicate states"=0,
		GraphType=F_J,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=16,
		"Pruned using list schedule length"=249308,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-6",
		"Time to schedule (ms)"=1355,
		"Total idle time"=399,
		"Total schedule length"=428,
		"Total sequential time"=1851,
		"Total states created"=1005806
	];
	0	["Finish time"=73,
		Processor=0,
		"Start time"=0,
		Weight=73];
	5	["Finish time"=256,
		Processor=0,
		"Start time"=73,
		Weight=183];
	0 -> 5	[Weight=7];
	1	["Finish time"=263,
		Processor=1,
		"Start time"=80,
		Weight=183];
	0 -> 1	[Weight=7];
	6	["Finish time"=264,
		Processor=2,
		"Start time"=81,
		Weight=183];
	0 -> 6	[Weight=8];
	12	["Finish time"=262,
		Processor=3,
		"Start time"=79,
		Weight=183];
	0 -> 12	[Weight=6];
	13	["Finish time"=245,
		Processor=4,
		"Start time"=80,
		Weight=165];
	0 -> 13	[Weight=7];
	10	["Finish time"=244,
		Processor=5,
		"Start time"=79,
		Weight=165];
	0 -> 10	[Weight=6];
	9	["Finish time"=391,
		Processor=5,
		"Start time"=244,
		Weight=147];
	0 -> 9	[Weight=8];
	2	["Finish time"=373,
		Processor=4,
		"Start time"=245,
		Weight=128];
	0 -> 2	[Weight=10];
	11	["Finish time"=384,
		Processor=0,
		"Start time"=256,
		Weight=128];
	0 -> 11	[Weight=7];
	8	["Finish time"=354,
		Processor=3,
		"Start time"=262,
		Weight=92];
	0 -> 8	[Weight=2];
	3	["Finish time"=336,
		Processor=1,
		"Start time"=263,
		Weight=73];
	0 -> 3	[Weight=5];
	14	["Finish time"=301,
		Processor=2,
		"Start time"=264,
		Weight=37];
	0 -> 14	[Weight=9];
	7	["Finish time"=338,
		Processor=2,
		"Start time"=301,
		Weight=37];
	0 -> 7	[Weight=10];
	4	["Finish time"=373,
		Processor=1,
		"Start time"=336,
		Weight=37];
	0 -> 4	[Weight=2];
	15	["Finish time"=428,
		Processor=5,
		"Start time"=391,
		Weight=37];
	5 -> 15	[Weight=10];
	1 -> 15	[Weight=9];
	6 -> 15	[Weight=9];
	12 -> 15	[Weight=4];
	13 -> 15	[Weight=9];
	10 -> 15	[Weight=8];
	9 -> 15	[Weight=10];
	2 -> 15	[Weight=7];
	11 -> 15	[Weight=2];
	8 -> 15	[Weight=6];
	3 -> 15	[Weight=5];
	14 -> 15	[Weight=5];
	7 -> 15	[Weight=4];
	4 -> 15	[Weight=3];
}
