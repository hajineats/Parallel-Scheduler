digraph "Random_Nodes_30_Density_2.30_CCR_1.00_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=30,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-6",
		"Time to schedule (ms)"=113,
		"Total idle time"=315,
		"Total schedule length"=163,
		"Total sequential time"=433,
		"Total states created"=2
	];
	1	["Finish time"=19,
		Processor=0,
		"Start time"=0,
		Weight=19];
	3	["Finish time"=24,
		Processor=0,
		"Start time"=19,
		Weight=5];
	1 -> 3	[Weight=2];
	19	["Finish time"=113,
		Processor=0,
		"Start time"=102,
		Weight=11];
	1 -> 19	[Weight=9];
	21	["Finish time"=127,
		Processor=3,
		"Start time"=100,
		Weight=27];
	1 -> 21	[Weight=3];
	5	["Finish time"=40,
		Processor=0,
		"Start time"=24,
		Weight=16];
	3 -> 5	[Weight=8];
	6	["Finish time"=64,
		Processor=0,
		"Start time"=40,
		Weight=24];
	3 -> 6	[Weight=5];
	7	["Finish time"=38,
		Processor=1,
		"Start time"=33,
		Weight=5];
	3 -> 7	[Weight=9];
	15	["Finish time"=54,
		Processor=2,
		"Start time"=32,
		Weight=22];
	3 -> 15	[Weight=8];
	10	["Finish time"=102,
		Processor=0,
		"Start time"=91,
		Weight=11];
	3 -> 10	[Weight=2];
	27	["Finish time"=149,
		Processor=0,
		"Start time"=135,
		Weight=14];
	3 -> 27	[Weight=9];
	29	["Finish time"=136,
		Processor=1,
		"Start time"=109,
		Weight=27];
	3 -> 29	[Weight=9];
	23	["Finish time"=137,
		Processor=2,
		"Start time"=123,
		Weight=14];
	3 -> 23	[Weight=2];
	13	["Finish time"=49,
		Processor=5,
		"Start time"=44,
		Weight=5];
	3 -> 13	[Weight=3];
	5 -> 6	[Weight=10];
	5 -> 29	[Weight=9];
	25	["Finish time"=129,
		Processor=4,
		"Start time"=118,
		Weight=11];
	5 -> 25	[Weight=10];
	5 -> 13	[Weight=2];
	4	["Finish time"=8,
		Processor=1,
		"Start time"=0,
		Weight=8];
	4 -> 6	[Weight=8];
	4 -> 7	[Weight=2];
	20	["Finish time"=135,
		Processor=0,
		"Start time"=113,
		Weight=22];
	4 -> 20	[Weight=3];
	22	["Finish time"=123,
		Processor=2,
		"Start time"=107,
		Weight=16];
	4 -> 22	[Weight=8];
	4 -> 25	[Weight=5];
	4 -> 13	[Weight=2];
	26	["Finish time"=134,
		Processor=3,
		"Start time"=129,
		Weight=5];
	4 -> 26	[Weight=9];
	9	["Finish time"=91,
		Processor=0,
		"Start time"=64,
		Weight=27];
	6 -> 9	[Weight=9];
	16	["Finish time"=93,
		Processor=1,
		"Start time"=74,
		Weight=19];
	6 -> 16	[Weight=10];
	6 -> 20	[Weight=4];
	17	["Finish time"=73,
		Processor=2,
		"Start time"=68,
		Weight=5];
	6 -> 17	[Weight=4];
	24	["Finish time"=82,
		Processor=4,
		"Start time"=74,
		Weight=8];
	6 -> 24	[Weight=10];
	2	["Finish time"=24,
		Processor=2,
		"Start time"=0,
		Weight=24];
	2 -> 15	[Weight=3];
	2 -> 19	[Weight=8];
	2 -> 27	[Weight=6];
	18	["Finish time"=45,
		Processor=4,
		"Start time"=40,
		Weight=5];
	2 -> 18	[Weight=7];
	14	["Finish time"=14,
		Processor=3,
		"Start time"=0,
		Weight=14];
	14 -> 15	[Weight=5];
	14 -> 22	[Weight=6];
	14 -> 25	[Weight=10];
	14 -> 26	[Weight=10];
	9 -> 10	[Weight=3];
	11	["Finish time"=109,
		Processor=1,
		"Start time"=98,
		Weight=11];
	9 -> 11	[Weight=7];
	7 -> 16	[Weight=10];
	7 -> 18	[Weight=2];
	7 -> 13	[Weight=6];
	15 -> 19	[Weight=10];
	28	["Finish time"=163,
		Processor=0,
		"Start time"=149,
		Weight=14];
	15 -> 28	[Weight=9];
	16 -> 19	[Weight=9];
	16 -> 21	[Weight=7];
	16 -> 29	[Weight=2];
	10 -> 19	[Weight=3];
	10 -> 22	[Weight=5];
	10 -> 29	[Weight=3];
	8	["Finish time"=14,
		Processor=4,
		"Start time"=0,
		Weight=14];
	8 -> 20	[Weight=10];
	8 -> 21	[Weight=2];
	8 -> 28	[Weight=5];
	19 -> 20	[Weight=2];
	20 -> 27	[Weight=10];
	0	["Finish time"=11,
		Processor=5,
		"Start time"=0,
		Weight=11];
	0 -> 11	[Weight=2];
	0 -> 17	[Weight=9];
	0 -> 29	[Weight=6];
	0 -> 18	[Weight=5];
	0 -> 26	[Weight=9];
	11 -> 29	[Weight=10];
	11 -> 25	[Weight=9];
	17 -> 27	[Weight=5];
	17 -> 29	[Weight=5];
	12	["Finish time"=30,
		Processor=5,
		"Start time"=11,
		Weight=19];
	12 -> 23	[Weight=7];
	22 -> 23	[Weight=6];
	22 -> 26	[Weight=6];
	27 -> 28	[Weight=6];
	18 -> 25	[Weight=10];
	24 -> 25	[Weight=3];
}
