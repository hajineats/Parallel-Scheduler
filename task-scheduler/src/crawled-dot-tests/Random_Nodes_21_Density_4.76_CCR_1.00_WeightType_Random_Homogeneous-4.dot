digraph "Random_Nodes_21_Density_4.76_CCR_1.00_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=21,
		"Pruned using list schedule length"=9812,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-4",
		"Time to schedule (ms)"=236,
		"Total idle time"=426,
		"Total schedule length"=388,
		"Total sequential time"=575,
		"Total states created"=16619
	];
	0	["Finish time"=33,
		Processor=0,
		"Start time"=0,
		Weight=33];
	3	["Finish time"=80,
		Processor=0,
		"Start time"=33,
		Weight=47];
	0 -> 3	[Weight=5];
	6	["Finish time"=141,
		Processor=0,
		"Start time"=127,
		Weight=14];
	0 -> 6	[Weight=8];
	5	["Finish time"=102,
		Processor=3,
		"Start time"=83,
		Weight=19];
	0 -> 5	[Weight=2];
	8	["Finish time"=178,
		Processor=0,
		"Start time"=155,
		Weight=23];
	0 -> 8	[Weight=7];
	12	["Finish time"=261,
		Processor=3,
		"Start time"=219,
		Weight=42];
	0 -> 12	[Weight=10];
	15	["Finish time"=250,
		Processor=2,
		"Start time"=217,
		Weight=33];
	0 -> 15	[Weight=8];
	18	["Finish time"=355,
		Processor=3,
		"Start time"=308,
		Weight=47];
	0 -> 18	[Weight=4];
	17	["Finish time"=327,
		Processor=2,
		"Start time"=304,
		Weight=23];
	0 -> 17	[Weight=8];
	4	["Finish time"=127,
		Processor=0,
		"Start time"=80,
		Weight=47];
	3 -> 4	[Weight=2];
	3 -> 6	[Weight=4];
	3 -> 5	[Weight=3];
	3 -> 8	[Weight=9];
	3 -> 12	[Weight=10];
	13	["Finish time"=304,
		Processor=2,
		"Start time"=290,
		Weight=14];
	3 -> 13	[Weight=7];
	3 -> 18	[Weight=3];
	19	["Finish time"=388,
		Processor=3,
		"Start time"=355,
		Weight=33];
	3 -> 19	[Weight=8];
	1	["Finish time"=33,
		Processor=1,
		"Start time"=0,
		Weight=33];
	2	["Finish time"=45,
		Processor=2,
		"Start time"=36,
		Weight=9];
	1 -> 2	[Weight=3];
	1 -> 4	[Weight=6];
	1 -> 6	[Weight=2];
	1 -> 5	[Weight=2];
	7	["Finish time"=155,
		Processor=0,
		"Start time"=141,
		Weight=14];
	1 -> 7	[Weight=4];
	10	["Finish time"=206,
		Processor=2,
		"Start time"=183,
		Weight=23];
	1 -> 10	[Weight=2];
	9	["Finish time"=211,
		Processor=0,
		"Start time"=178,
		Weight=33];
	1 -> 9	[Weight=4];
	16	["Finish time"=308,
		Processor=3,
		"Start time"=261,
		Weight=47];
	1 -> 16	[Weight=3];
	14	["Finish time"=290,
		Processor=2,
		"Start time"=267,
		Weight=23];
	1 -> 14	[Weight=9];
	1 -> 18	[Weight=6];
	1 -> 17	[Weight=7];
	2 -> 4	[Weight=2];
	2 -> 5	[Weight=8];
	2 -> 8	[Weight=9];
	2 -> 10	[Weight=4];
	2 -> 9	[Weight=3];
	11	["Finish time"=219,
		Processor=3,
		"Start time"=210,
		Weight=9];
	2 -> 11	[Weight=8];
	2 -> 16	[Weight=6];
	2 -> 14	[Weight=10];
	20	["Finish time"=369,
		Processor=2,
		"Start time"=360,
		Weight=9];
	2 -> 20	[Weight=8];
	4 -> 6	[Weight=4];
	4 -> 9	[Weight=2];
	4 -> 11	[Weight=2];
	4 -> 12	[Weight=8];
	4 -> 14	[Weight=6];
	4 -> 13	[Weight=2];
	4 -> 17	[Weight=2];
	4 -> 20	[Weight=5];
	6 -> 7	[Weight=8];
	6 -> 11	[Weight=9];
	6 -> 15	[Weight=3];
	6 -> 16	[Weight=8];
	6 -> 13	[Weight=9];
	6 -> 18	[Weight=4];
	6 -> 17	[Weight=3];
	5 -> 8	[Weight=2];
	5 -> 15	[Weight=9];
	5 -> 16	[Weight=6];
	5 -> 14	[Weight=10];
	5 -> 13	[Weight=10];
	5 -> 19	[Weight=7];
	7 -> 8	[Weight=5];
	7 -> 11	[Weight=9];
	7 -> 15	[Weight=3];
	7 -> 14	[Weight=10];
	7 -> 18	[Weight=10];
	7 -> 17	[Weight=10];
	8 -> 10	[Weight=5];
	8 -> 9	[Weight=10];
	8 -> 14	[Weight=4];
	8 -> 18	[Weight=4];
	10 -> 11	[Weight=4];
	10 -> 12	[Weight=7];
	10 -> 15	[Weight=6];
	10 -> 16	[Weight=3];
	10 -> 14	[Weight=2];
	10 -> 18	[Weight=6];
	10 -> 17	[Weight=2];
	9 -> 12	[Weight=8];
	9 -> 15	[Weight=6];
	9 -> 16	[Weight=5];
	9 -> 20	[Weight=2];
	11 -> 12	[Weight=8];
	11 -> 16	[Weight=3];
	11 -> 14	[Weight=7];
	11 -> 13	[Weight=3];
	11 -> 19	[Weight=9];
	11 -> 20	[Weight=10];
	12 -> 16	[Weight=2];
	12 -> 14	[Weight=6];
	12 -> 13	[Weight=4];
	12 -> 19	[Weight=8];
	15 -> 16	[Weight=8];
	15 -> 19	[Weight=9];
	15 -> 20	[Weight=3];
	16 -> 18	[Weight=8];
	14 -> 18	[Weight=7];
	14 -> 19	[Weight=3];
	14 -> 20	[Weight=4];
	13 -> 18	[Weight=2];
	13 -> 17	[Weight=4];
	13 -> 20	[Weight=10];
	18 -> 19	[Weight=6];
	18 -> 20	[Weight=5];
}
