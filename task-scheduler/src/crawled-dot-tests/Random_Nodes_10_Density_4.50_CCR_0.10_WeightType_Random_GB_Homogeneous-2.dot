digraph "Random_Nodes_10_Density_4.50_CCR_0.10_WeightType_Random_GB" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=10,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-2",
		"Time to schedule (ms)"=96,
		"Total idle time"=0,
		"Total schedule length"=2680,
		"Total sequential time"=2680,
		"Total states created"=2
	];
	0	["Finish time"=152,
		Processor=0,
		"Start time"=0,
		Weight=152];
	1	["Finish time"=354,
		Processor=0,
		"Start time"=152,
		Weight=202];
	0 -> 1	[Weight=5];
	2	["Finish time"=657,
		Processor=0,
		"Start time"=354,
		Weight=303];
	0 -> 2	[Weight=3];
	3	["Finish time"=910,
		Processor=0,
		"Start time"=657,
		Weight=253];
	0 -> 3	[Weight=5];
	4	["Finish time"=1163,
		Processor=0,
		"Start time"=910,
		Weight=253];
	0 -> 4	[Weight=4];
	5	["Finish time"=1517,
		Processor=0,
		"Start time"=1163,
		Weight=354];
	0 -> 5	[Weight=4];
	6	["Finish time"=1618,
		Processor=0,
		"Start time"=1517,
		Weight=101];
	0 -> 6	[Weight=10];
	7	["Finish time"=1770,
		Processor=0,
		"Start time"=1618,
		Weight=152];
	0 -> 7	[Weight=5];
	8	["Finish time"=2225,
		Processor=0,
		"Start time"=1770,
		Weight=455];
	0 -> 8	[Weight=4];
	9	["Finish time"=2680,
		Processor=0,
		"Start time"=2225,
		Weight=455];
	0 -> 9	[Weight=9];
	1 -> 2	[Weight=8];
	1 -> 3	[Weight=6];
	1 -> 4	[Weight=4];
	1 -> 5	[Weight=8];
	1 -> 6	[Weight=2];
	1 -> 7	[Weight=6];
	1 -> 8	[Weight=7];
	1 -> 9	[Weight=4];
	2 -> 3	[Weight=4];
	2 -> 4	[Weight=3];
	2 -> 5	[Weight=10];
	2 -> 6	[Weight=4];
	2 -> 7	[Weight=10];
	2 -> 8	[Weight=4];
	2 -> 9	[Weight=9];
	3 -> 4	[Weight=4];
	3 -> 5	[Weight=7];
	3 -> 6	[Weight=3];
	3 -> 7	[Weight=9];
	3 -> 8	[Weight=8];
	3 -> 9	[Weight=7];
	4 -> 5	[Weight=2];
	4 -> 6	[Weight=9];
	4 -> 7	[Weight=7];
	4 -> 8	[Weight=4];
	4 -> 9	[Weight=3];
	5 -> 6	[Weight=5];
	5 -> 7	[Weight=6];
	5 -> 8	[Weight=7];
	5 -> 9	[Weight=6];
	6 -> 7	[Weight=5];
	6 -> 8	[Weight=9];
	6 -> 9	[Weight=8];
	7 -> 8	[Weight=10];
	7 -> 9	[Weight=8];
	8 -> 9	[Weight=3];
}
