digraph "Random_Nodes_10_Density_4.50_CCR_10.02_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=10,
		"Pruned using list schedule length"=1,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-4",
		"Time to schedule (ms)"=94,
		"Total idle time"=0,
		"Total schedule length"=56,
		"Total sequential time"=56,
		"Total states created"=2
	];
	0	["Finish time"=2,
		Processor=0,
		"Start time"=0,
		Weight=2];
	1	["Finish time"=11,
		Processor=0,
		"Start time"=2,
		Weight=9];
	0 -> 1	[Weight=6];
	2	["Finish time"=20,
		Processor=0,
		"Start time"=11,
		Weight=9];
	0 -> 2	[Weight=6];
	3	["Finish time"=22,
		Processor=0,
		"Start time"=20,
		Weight=2];
	0 -> 3	[Weight=12];
	4	["Finish time"=30,
		Processor=0,
		"Start time"=22,
		Weight=8];
	0 -> 4	[Weight=19];
	5	["Finish time"=33,
		Processor=0,
		"Start time"=30,
		Weight=3];
	0 -> 5	[Weight=15];
	6	["Finish time"=36,
		Processor=0,
		"Start time"=33,
		Weight=3];
	0 -> 6	[Weight=8];
	7	["Finish time"=39,
		Processor=0,
		"Start time"=36,
		Weight=3];
	0 -> 7	[Weight=21];
	8	["Finish time"=48,
		Processor=0,
		"Start time"=39,
		Weight=9];
	0 -> 8	[Weight=4];
	9	["Finish time"=56,
		Processor=0,
		"Start time"=48,
		Weight=8];
	0 -> 9	[Weight=19];
	1 -> 2	[Weight=21];
	1 -> 3	[Weight=21];
	1 -> 4	[Weight=17];
	1 -> 5	[Weight=4];
	1 -> 6	[Weight=12];
	1 -> 7	[Weight=4];
	1 -> 8	[Weight=19];
	1 -> 9	[Weight=4];
	2 -> 3	[Weight=6];
	2 -> 4	[Weight=21];
	2 -> 5	[Weight=6];
	2 -> 6	[Weight=17];
	2 -> 7	[Weight=17];
	2 -> 8	[Weight=12];
	2 -> 9	[Weight=6];
	3 -> 4	[Weight=15];
	3 -> 5	[Weight=19];
	3 -> 6	[Weight=17];
	3 -> 7	[Weight=17];
	3 -> 8	[Weight=15];
	3 -> 9	[Weight=8];
	4 -> 5	[Weight=6];
	4 -> 6	[Weight=12];
	4 -> 7	[Weight=19];
	4 -> 8	[Weight=21];
	4 -> 9	[Weight=10];
	5 -> 6	[Weight=10];
	5 -> 7	[Weight=12];
	5 -> 8	[Weight=17];
	5 -> 9	[Weight=8];
	6 -> 7	[Weight=4];
	6 -> 8	[Weight=4];
	6 -> 9	[Weight=17];
	7 -> 8	[Weight=6];
	7 -> 9	[Weight=6];
	8 -> 9	[Weight=21];
}
