digraph "InTree-Balanced-MaxBf-3_Nodes_16_CCR_0.10_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=InTree,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=16,
		"Pruned using list schedule length"=1693,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-6",
		"Time to schedule (ms)"=139,
		"Total idle time"=22,
		"Total schedule length"=212,
		"Total sequential time"=889,
		"Total states created"=3202
	];
	0	["Finish time"=212,
		Processor=0,
		"Start time"=192,
		Weight=20];
	1	["Finish time"=192,
		Processor=0,
		"Start time"=121,
		Weight=71];
	1 -> 0	[Weight=10];
	2	["Finish time"=184,
		Processor=1,
		"Start time"=133,
		Weight=51];
	2 -> 0	[Weight=8];
	3	["Finish time"=172,
		Processor=2,
		"Start time"=121,
		Weight=51];
	3 -> 0	[Weight=10];
	4	["Finish time"=121,
		Processor=0,
		"Start time"=101,
		Weight=20];
	4 -> 1	[Weight=7];
	5	["Finish time"=101,
		Processor=3,
		"Start time"=0,
		Weight=101];
	5 -> 1	[Weight=5];
	6	["Finish time"=91,
		Processor=2,
		"Start time"=61,
		Weight=30];
	6 -> 1	[Weight=7];
	7	["Finish time"=131,
		Processor=4,
		"Start time"=30,
		Weight=101];
	7 -> 2	[Weight=2];
	8	["Finish time"=121,
		Processor=2,
		"Start time"=91,
		Weight=30];
	8 -> 2	[Weight=10];
	9	["Finish time"=111,
		Processor=1,
		"Start time"=71,
		Weight=40];
	9 -> 2	[Weight=7];
	10	["Finish time"=111,
		Processor=5,
		"Start time"=30,
		Weight=81];
	10 -> 3	[Weight=2];
	11	["Finish time"=30,
		Processor=4,
		"Start time"=0,
		Weight=30];
	11 -> 3	[Weight=4];
	12	["Finish time"=61,
		Processor=2,
		"Start time"=0,
		Weight=61];
	12 -> 3	[Weight=2];
	13	["Finish time"=71,
		Processor=1,
		"Start time"=0,
		Weight=71];
	13 -> 4	[Weight=5];
	14	["Finish time"=30,
		Processor=5,
		"Start time"=0,
		Weight=30];
	14 -> 4	[Weight=6];
	15	["Finish time"=101,
		Processor=0,
		"Start time"=0,
		Weight=101];
	15 -> 4	[Weight=4];
}
