digraph "Random_Nodes_21_Density_4.86_CCR_10.08_WeightType_Random" {
	graph ["Duplicate states"=0,
		GraphType=Random,
		"Max states in OPEN"=0,
		Modes="120000ms; topo-ordered tasks, ; Pruning: task equivalence, fixed order ready list, ; F-value: ; Optimisation: best schedule length (\
SL) optimisation on equal, ",
		NumberOfTasks=21,
		"Pruned using list schedule length"=4513743,
		"States removed from OPEN"=0,
		TargetSystem="Homogeneous-6",
		"Time to schedule (ms)"=6471,
		"Total idle time"=221,
		"Total schedule length"=94,
		"Total sequential time"=118,
		"Total states created"=14665201
	];
	1	["Finish time"=10,
		Processor=0,
		"Start time"=8,
		Weight=2];
	2	["Finish time"=16,
		Processor=0,
		"Start time"=10,
		Weight=6];
	1 -> 2	[Weight=19];
	5	["Finish time"=26,
		Processor=0,
		"Start time"=19,
		Weight=7];
	1 -> 5	[Weight=12];
	3	["Finish time"=19,
		Processor=0,
		"Start time"=16,
		Weight=3];
	1 -> 3	[Weight=14];
	7	["Finish time"=41,
		Processor=0,
		"Start time"=33,
		Weight=8];
	1 -> 7	[Weight=17];
	8	["Finish time"=57,
		Processor=0,
		"Start time"=51,
		Weight=6];
	1 -> 8	[Weight=4];
	9	["Finish time"=51,
		Processor=0,
		"Start time"=41,
		Weight=10];
	1 -> 9	[Weight=15];
	15	["Finish time"=81,
		Processor=2,
		"Start time"=77,
		Weight=4];
	1 -> 15	[Weight=12];
	16	["Finish time"=90,
		Processor=4,
		"Start time"=88,
		Weight=2];
	1 -> 16	[Weight=17];
	19	["Finish time"=94,
		Processor=4,
		"Start time"=90,
		Weight=4];
	1 -> 19	[Weight=15];
	20	["Finish time"=94,
		Processor=2,
		"Start time"=90,
		Weight=4];
	1 -> 20	[Weight=12];
	0	["Finish time"=8,
		Processor=0,
		"Start time"=0,
		Weight=8];
	0 -> 2	[Weight=4];
	0 -> 5	[Weight=4];
	0 -> 3	[Weight=12];
	0 -> 7	[Weight=19];
	0 -> 8	[Weight=4];
	12	["Finish time"=65,
		Processor=0,
		"Start time"=57,
		Weight=8];
	0 -> 12	[Weight=15];
	0 -> 15	[Weight=8];
	14	["Finish time"=73,
		Processor=0,
		"Start time"=65,
		Weight=8];
	0 -> 14	[Weight=12];
	18	["Finish time"=90,
		Processor=2,
		"Start time"=81,
		Weight=9];
	0 -> 18	[Weight=17];
	0 -> 19	[Weight=10];
	0 -> 20	[Weight=14];
	2 -> 5	[Weight=15];
	2 -> 3	[Weight=6];
	2 -> 7	[Weight=14];
	6	["Finish time"=33,
		Processor=0,
		"Start time"=26,
		Weight=7];
	2 -> 6	[Weight=14];
	2 -> 9	[Weight=4];
	11	["Finish time"=41,
		Processor=3,
		"Start time"=35,
		Weight=6];
	2 -> 11	[Weight=19];
	2 -> 12	[Weight=8];
	2 -> 18	[Weight=14];
	2 -> 19	[Weight=6];
	5 -> 7	[Weight=17];
	5 -> 9	[Weight=10];
	5 -> 11	[Weight=8];
	13	["Finish time"=72,
		Processor=2,
		"Start time"=68,
		Weight=4];
	5 -> 13	[Weight=17];
	5 -> 12	[Weight=14];
	5 -> 15	[Weight=6];
	5 -> 18	[Weight=12];
	5 -> 16	[Weight=19];
	5 -> 19	[Weight=14];
	5 -> 20	[Weight=4];
	3 -> 7	[Weight=15];
	4	["Finish time"=37,
		Processor=1,
		"Start time"=33,
		Weight=4];
	3 -> 4	[Weight=14];
	3 -> 8	[Weight=6];
	3 -> 15	[Weight=17];
	3 -> 14	[Weight=4];
	3 -> 19	[Weight=17];
	3 -> 20	[Weight=12];
	7 -> 8	[Weight=14];
	7 -> 9	[Weight=10];
	7 -> 12	[Weight=15];
	7 -> 15	[Weight=6];
	17	["Finish time"=77,
		Processor=2,
		"Start time"=72,
		Weight=5];
	7 -> 17	[Weight=10];
	7 -> 16	[Weight=14];
	7 -> 19	[Weight=10];
	7 -> 20	[Weight=10];
	6 -> 8	[Weight=14];
	6 -> 9	[Weight=6];
	6 -> 13	[Weight=14];
	6 -> 19	[Weight=4];
	6 -> 20	[Weight=12];
	4 -> 8	[Weight=4];
	10	["Finish time"=64,
		Processor=2,
		"Start time"=61,
		Weight=3];
	4 -> 10	[Weight=17];
	4 -> 12	[Weight=4];
	4 -> 15	[Weight=10];
	4 -> 17	[Weight=19];
	4 -> 14	[Weight=15];
	4 -> 18	[Weight=6];
	4 -> 16	[Weight=17];
	8 -> 10	[Weight=4];
	8 -> 15	[Weight=10];
	8 -> 14	[Weight=17];
	8 -> 18	[Weight=15];
	9 -> 13	[Weight=17];
	9 -> 12	[Weight=6];
	9 -> 17	[Weight=15];
	9 -> 14	[Weight=6];
	9 -> 18	[Weight=10];
	9 -> 19	[Weight=8];
	9 -> 20	[Weight=14];
	10 -> 13	[Weight=17];
	10 -> 16	[Weight=10];
	10 -> 19	[Weight=17];
	10 -> 20	[Weight=17];
	11 -> 12	[Weight=14];
	11 -> 18	[Weight=4];
	11 -> 19	[Weight=14];
	13 -> 15	[Weight=6];
	13 -> 17	[Weight=15];
	13 -> 18	[Weight=14];
	13 -> 16	[Weight=10];
	12 -> 15	[Weight=4];
	12 -> 14	[Weight=12];
	12 -> 20	[Weight=10];
	15 -> 18	[Weight=15];
	15 -> 16	[Weight=6];
	15 -> 20	[Weight=6];
	17 -> 18	[Weight=14];
	14 -> 16	[Weight=15];
	14 -> 19	[Weight=8];
	14 -> 20	[Weight=17];
	18 -> 20	[Weight=15];
	16 -> 19	[Weight=14];
}
